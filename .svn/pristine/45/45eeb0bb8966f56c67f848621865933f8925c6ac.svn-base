// pages/tms/elecLockOperLog/elecLockOperLog.js
var util = require('../../../utils/util.js')
const app = getApp();
var that;
var arr_old;
var array_vals;
var searchPageNum;
var callbackcount;

var operTypeArrays = [{
  otype: '',
  oname: "全部类型"
}, {
  otype: '1',
  oname: "申请动态密码"
}, {
  otype: "2",
  oname: '平台施封'
}, {
  otype: "3",
  oname: '申请施封'
}, {
  otype: "4",
  oname: '手动开锁'
}, {
  otype: "5",
  oname: '平台解封'
}, {
  otype: "6",
  oname: '短信施封'
}, {
  otype: "7",
  oname: '短信解封'
}, {
  otype: "8",
  oname: '修改本地密码'
}];
Page({
  /**
   * 页面的初始数据
   */
  data: {
    operTypeArrays: "",
    operArraysIndex: "",
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var startDate = new Date();
    var endDate = new Date();
    startDate = util.formatDate(startDate);
    endDate = util.formatDate(endDate);
    this.setData({
      operTypeArrays: operTypeArrays,
      operArraysIndex: 0,
      deviceCode: '',
      startDate: startDate,
      endDate: endDate,
      forecast: [],
      isFromSearch: true, // 用于判断数组是不是空数组，默认true，空的数组
      searchPageNum: 1, // 设置加载的第几次，默认是第一次  
      callbackcount: 15, //返回数据的个数  
      searchLoading: false, //"上拉加载"的变量，默认false，隐藏  
      searchLoadingComplete: false, //“没有数据”的变量，默认false，隐藏 
    })
  },


  bindStartChange: function(e) {
    this.setData({
      startDate: e.detail.value
    })
  },

  bindEndChange: function(e) {
    this.setData({
      endDate: e.detail.value
    })
  },
  bindOperTypeChange: function(e) {
    this.setData({
      operArraysIndex: e.detail.value
    })
  },
  //滚动到底部触发事件  
  searchScrollLower: function() {
    let that = this;
    if (that.data.searchLoading && !that.data.searchLoadingComplete) {
      that.setData({
        searchPageNum: that.data.searchPageNum + 1, //每次触发上拉事件，把searchPageNum+1  
        isFromSearch: false //触发到上拉事件，把isFromSearch设为为false  
      });
      that.fetchSearchList("N");
    }
  },
  //搜索请求
  scan_code: function() {
    var that = this;
    var deviceCode = that.data.deviceCode;
    if (deviceCode == undefined) {
      deviceCode = "";
    }

    that.setData({
      searchPageNum: 1, //第一次加载，设置1  
      forecast: [], //放置返回数据的数组,设为空  
      isFromSearch: true, //第一次加载，设置true  
      searchLoading: false, //把"上拉加载"的变量设为true，显示  
      searchLoadingComplete: false //把“没有数据”设为false，隐藏  
    })
    that.fetchSearchList("N");
  },
  ////搜索
  jumpToMyPage_sousuo: function() {

    this.scan_code();
  },
  //查询列表
  fetchSearchList: function(types) {
    let that = this;
    let deviceCode = that.data.deviceCode; //输入框字符串单号作为参数  
    let startDate = that.data.startDate;
    let endDate = that.data.endDate;
    searchPageNum = that.data.searchPageNum; //把第几次加载次数作为参数  
    callbackcount = that.data.callbackcount; //返回数据的个数
    let officeCode = wx.getStorageSync("userinfo").officeCode;
    let operArraysIndex = that.data.operArraysIndex == 0 ? '' : that.data.operArraysIndex;
    if (!startDate) {
      wx.showToast({
        title: '请输入开始日期',
        icon: 'none',
        duration: 3000
      })
      return
    }
    if (!endDate) {
      wx.showToast({
        title: '请输入结束日期',
        icon: 'none',
        duration: 3000
      })
      return
    }
    wx.request({
      url: app.getBaseUrl() + 'service/wechat_searchEleckOperLog',
      method: "POST",
      data: {
        officeCode: officeCode,
        deviceCode: deviceCode,
        operType: operArraysIndex,
        pageNow: searchPageNum,
        pageSize: callbackcount,
        startDate: startDate,
        endDate: endDate
      },
      success: function(res) {
        console.log(res)
        if (res.data.data) {
          var isSuccess = res.data.data.isSuccess;
          var s_obj = res.data.data.data;

          if (isSuccess && isSuccess == 'N') {
            that.setData({
              deviceCode: '',
              isFromSearch: true, //第一次加载，设置true  
              searchLoading: false, //把"上拉加载"的变量设为true，显示  
              searchLoadingComplete: false //把“没有数据”设为false，隐藏
            });
            wx.showToast({
              title: '设备不存在或无数据',
              icon: 'none',
              duration: 3000
            })

            return;
          }
          if (isSuccess == 'Y') {
            //如果返回了数据
            if (s_obj.length !== 0 && s_obj.length != undefined) {
              let searchList = [];
              //UtilCommon.formatTime(new Date(arrs[0].gpsTime))
              //如果isFromSearch是true从data中取出数据，否则先从原来的数据继续添加  
              that.data.isFromSearch ? searchList = s_obj : searchList = that.data.forecast.concat(s_obj);
              if (s_obj.length < that.data.callbackcount) {
                that.setData({
                  deviceCode: '',
                  forecast: searchList, //获取数据数组  
                  searchLoadingComplete: true, //把“没有数据”设为true，显示 
                  searchLoading: false
                });
              } else {
                that.setData({
                  deviceCode: that.data.deviceCode, //设备号
                  forecast: searchList, //获取数据数组  
                  searchLoading: true //把"上拉加载"的变量设为false，显示  
                });
              }
            } else {
              that.setData({
                deviceCode: that.data.deviceCode, //设备号
                // forecast: searchList, //获取数据数组  
                searchLoading: false, //把"上拉加载"的变量设为false，显示  
                searchLoadingComplete: true
              });
              wx.showToast({
                title: '查询无数据',
                icon: 'none',
                duration: 3000
              })
              return
            }
          }
        }else{
          wx.showToast({
            title: '无结果',
            duration: 1500,
            icon: "none"
          })
        }
      },
      fail: function(err) {
        wx.showToast({
          title: '网络异常请重试',
          duration: 3000,
          icon: "none"
        })
      }

    });
  },

  userNameInput: function(e) {
    this.setData({
      deviceCode: e.detail.value
    });
  },

})